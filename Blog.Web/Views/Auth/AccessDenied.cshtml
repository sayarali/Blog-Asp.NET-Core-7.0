@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>403 - Erişim Engellendi!</title>
    <meta charset="utf-8">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat&display=swap" rel="stylesheet">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <script src="https://kit.fontawesome.com/a781bd13a7.js" crossorigin="anonymous"></script>
    <style>

        @@import url('https://fonts.googleapis.com/css?family=Comfortaa');

        * {
            box-sizing: border-box;
            font-family: 'Montserrat', sans-serif;
        }

        body,
        html {
            margin: 0;
            padding: 0;
            height: 100%;
            overflow: hidden;
        }

        body {
            background-color: #E48400;
            font-family: sans-serif;
        }

        .container {
            z-index: 1;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
            text-align: center;
            padding: 10px;
            min-width: 300px;
            div

        {
            display: inline-block;
        }

        .lock {
            opacity: 1;
        }

        h1 {
            font-family: 'Comfortaa', cursive;
            font-size: 100px;
            text-align: center;
            color: #eee;
            font-weight: 100;
            margin: 0;
        }

        p {
            color: #fff;
        }

        }

        .lock {
            transition: 0.5s ease;
            position: relative;
            overflow: hidden;
            opacity: 0;
            &.generated

        {
            transform: scale(0.5);
            position: absolute;
            animation: 2s move linear;
            animation-fill-mode: forwards;
        }

        ::after {
            content: '';
            background: #F76B1C;
            opacity: 0.3;
            display: block;
            position: absolute;
            height: 100%;
            width: 50%;
            top: 0;
            left: 0;
        }

        .bottom {
            background: #FB8B24;
            height: 40px;
            width: 60px;
            display: block;
            position: relative;
            margin: 0 auto;
        }

        .top {
            height: 60px;
            width: 50px;
            border-radius: 50%;
            border: 10px solid #fff;
            display: block;
            position: relative;
            top: 30px;
            margin: 0 auto;
            &::after

        {
            padding: 10px;
            border-radius: 50%;
        }

        }
        }

        @@keyframes move {
            to {
                top: 100%;
            }
        }

        @@media (max-width: 420px) {
            .container {
                transform: translate(-50%,-50%) scale(0.8)
            }

            .lock.generated {
                transform: scale(0.3);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>
            4<div class="lock">
                <div class="top"></div><div class="bottom"></div>
            </div>3
        </h1>
        <p class="fs-5">Erişim Engellendi!</p>
        <p class="fs-6 opacity-75">Bir hata olduğunu düşünüyorsanız, site yöneticisiyle iletişime geçiniz.</p>
        <a href="/" class="btn btn-sm"><i class="fa-regular fa-hand-point-right"></i> Anasayfa</a>
    </div>

    <script>const interval = 500;

        function generateLocks() {
            const lock = document.createElement('div'),
                position = generatePosition();
            lock.innerHTML = '<div class="top"></div><div class="bottom"></div>';
            lock.style.top = position[0];
            lock.style.left = position[1];
            lock.classList = 'lock'
            document.body.appendChild(lock);
            setTimeout(() => {
                lock.style.opacity = '1';
                lock.classList.add('generated');
            }, 100);
            setTimeout(() => {
                lock.parentElement.removeChild(lock);
            }, 2000);
        }
        function generatePosition() {
            const x = Math.round((Math.random() * 100) - 10) + '%';
            const y = Math.round(Math.random() * 100) + '%';
            return [x, y];
        }
        setInterval(generateLocks, interval);
        generateLocks();</script>

</body>
</html>

